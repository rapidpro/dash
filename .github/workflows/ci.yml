name: CI
on: [push, pull_request]
jobs:
  test:
    name: Test
    env:
      python-version: "3.10.x"
      pg-version: "14"
      redis-version: "6.2"
    strategy:
      matrix:
        django-version: ["4.0.8", "4.1.5"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Redis
        uses: zhulik/redis-action@1.1.0
        with:
          redis version: ${{ env.redis-version }}

      - name: Install PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ env.pg-version }}
          postgresql db: dash
          postgresql user: dash
          postgresql password: rapidpro

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Initialize environment
        run: poetry install

      - name: Run pre-test checks
        run: |
          sudo apt-get install gettext
          poetry run ./code_check.py --debug

      - name: Run tests
        run: |
          poetry run coverage run manage.py test dash test_runner --verbosity=2
          poetry run coverage report -i
          poetry run coverage xml

      - name: Upload coverage
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"

      - name: Publish release
        run: |
          python -m pip install -U pip poetry
          poetry build
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
